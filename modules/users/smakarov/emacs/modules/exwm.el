;;; package --- Summary
;;; Commentary:
;;; EXWM settings

;;; Code:

(use-package exwm
  :init (exwm-enable)
  :hook (exwm-update-class . (lambda () (exwm-workspace-rename-buffer exwm-class-name)))
  :config
  (exwm-input-set-key (kbd "s-r") #'exwm-reset)
  (exwm-input-set-key (kbd "s-w") #'exwm-workspace-switch)
  (exwm-input-set-key (kbd "s-d") (lambda (command)
                                    (interactive (list (read-shell-command "$ ")))
                                    (start-process-shell-command command nil command)))
  (exwm-input-set-key (kbd "s-l") (lambda ()
                                    (interactive)
                                    (start-process "i3lock" nil "i3lock" "-n")))
  (dotimes (i 10)
    (exwm-input-set-key (kbd (format "s-%d" i))
                        `(lambda ()
                           (interactive)
                           (exwm-workspace-switch-create ,i))))
  (exwm-input-set-key (kbd "<XF86AudioPause>")
                      (lambda ()
                        (interactive)
                        (start-process-shell-command "pactl" nil "@pactlPath@ play-pause")))
  (exwm-input-set-key (kbd "<XF86AudioPlay>")
                      (lambda ()
                        (interactive)
                        (start-process-shell-command "pactl" nil "@pactlPath@ play-pause")))
  (exwm-input-set-key (kbd "<XF86AudioNext>")
                      (lambda ()
                        (interactive)
                        (start-process-shell-command "pactl" nil "@pactlPath@ next")))
  (exwm-input-set-key (kbd "<XF86AudioPrev>")
                      (lambda ()
                        (interactive)
                        (start-process-shell-command "pactl" nil "@pactlPath@ previous")))
  (exwm-input-set-key (kbd "<XF86AudioRaiseVolume>")
                      (lambda ()
                        (interactive)
                        (start-process-shell-command "pactl" nil "@pactlPath@ set-sink-volume 0 +5%")))
  (exwm-input-set-key (kbd "<XF86AudioLowerVolume>")
                      (lambda ()
                        (interactive)
                        (start-process-shell-command "pactl" nil "@pactlPath@ set-sink-volume 0 -5%")))
  (exwm-input-set-key (kbd "<XF86AudioMute>")
                      (lambda ()
                        (interactive)
                        (start-process-shell-command "pactl" nil "@pactlPath@ set-sink-mute 0 toggle")))
  (exwm-input-set-key (kbd "<XF86MonBrightnessUp>")
                      (lambda ()
                        (interactive)
                        (start-process-shell-command "xbacklight" nil "@acpilightPath@ -ctrl intel_backlight -inc 20")))
  (exwm-input-set-key (kbd "<XF86MonBrightnessDown>")
                      (lambda ()
                        (interactive)
                        (start-process-shell-command "xbacklight" nil "@acpilightPath@ -ctrl intel_backlight -dec 20")))
  (exwm-input-set-key (kbd "<XF86KbdBrightnessUp>")
                      (lambda ()
                        (interactive)
                        (start-process-shell-command "xbacklight" nil "@acpilightPath@ -ctrl kbd::asus_backlight -inc 20")))
  (exwm-input-set-key (kbd "<XF86KbdBrightnessDown>")
                      (lambda ()
                        (interactive)
                        (start-process-shell-command "xbacklight" nil "@acpilightPath@ -ctrl kbd::asus_backlight -dec 20")))
  (exwm-input-set-key (kbd "<print>")
                      (lambda ()
                        (interactive)
                        (async-shell-command "import png:- | xclip -selection c -t image/png")))
  (use-package symon
    :config
    (add-to-list 'symon-monitors 'symon-linux-battery-monitor)
    (add-to-list 'symon-monitors 'symon-current-time-monitor)
    (symon-mode)))

;;; exwm.el ends here
